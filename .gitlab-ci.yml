#
# This GitLab CI configuration builds the thesis on each push
# The thesis is stored as an repository artifact
#
# It works with the gitlab.mff.cuni.cz instance.
#

stages:
  - pdf-build
  - pdf-verify
  - dotnet-build
  - dotnet-test

variables:
  COVERLET_OUTPUT_FORMAT: "opencover,cobertura"
  COVERAGE_FILE: "./coverage/coverage.opencover.xml"

latexmk:
  stage: pdf-build
  image: aergus/latex
  script: |
    cd thesis
    latexmk thesis && latexmk abstract-sk && latexmk abstract-en
  artifacts:
    paths:
      - thesis/thesis.pdf
      - thesis/abstract-sk.pdf
      - thesis/abstract-en.pdf

verapdf:
  stage: pdf-verify
  image: ghcr.io/mff-cuni-cz/cuni-thesis-validator
  script: |
    verify thesis/thesis.pdf | grep 'isCompliant="true"'

dotnet-build:
  stage: dotnet-build
  image: mcr.microsoft.com/dotnet/sdk:7.0
  script: |
    cd implementation/DAPP
    dotnet publish -c Release -r win-x64 --self-contained false -o ./publish
  artifacts:
    paths:
      - implementation/DAPP/publish/

dotnet-test:
  stage: dotnet-test
  image: mcr.microsoft.com/dotnet/sdk:7.0
  script:
    - 'dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=${COVERLET_OUTPUT_FORMAT} /p:CoverletOutput=${COVERAGE_FILE} [Your Test Project Name]'
  artifacts:
    paths:
      - './coverage/'
    reports:
      cobertura: './coverage/coverage.opencover.xml'
