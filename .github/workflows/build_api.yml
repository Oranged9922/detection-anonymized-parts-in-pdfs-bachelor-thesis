name: Build and verify thesis PDF

on:
  push:

jobs:
  build-latex:
    name: Build thesis PDFs
    runs-on: ubuntu-latest
    container: { image: 'aergus/latex' }

    steps:
      - uses: actions/checkout@v2
      - name: Build the thesis
        run: |
          cd thesis
          latexmk thesis && latexmk abstract-sk && latexmk abstract-en
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Thesis
          path: thesis/*.pdf

  build-dotnet-sc:
    name: Build self-contained DAPP API
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
      - name: Build DAPP-API-sc
        run: |
          cd implementation/DAPP
          dotnet publish -c Release -r win-x64 --self-contained true -o ./publish
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: DAPP-API-sc
          path: implementation/DAPP/publish/


  build-dotnet:
    name: Build DAPP-API
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
      - name: Build DAPP-API
        run: |
          cd implementation/DAPP
          dotnet publish -c Release -r win-x64 --self-contained false -o ./publish
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: .NET-app
          path: implementation/DAPP/publish/


  verify:
    name: Verify PDF/A
    runs-on: ubuntu-latest
    needs: build-latex
    container: { image: 'ghcr.io/mff-cuni-cz/cuni-thesis-validator' }

    steps:
      - name: Get PDFs
        uses: actions/download-artifact@v2
        with:
          name: Thesis
      - name: Run VeraPDF
        run: verify Thesis/*.pdf | tee /dev/stderr | grep -qE 'nonCompliant="0"'
